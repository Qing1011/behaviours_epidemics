library(openxlsx)
library(mgcv)
library(stats)
library(ggplot2)
library(reshape2)
library(magick)
library(dlnm)
library(gridExtra)
library(dplyr)
library(pdp)
library(broom)
library(lmtest)
source('999_2_regression_fun_v2.R')
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
visits_scores_wk <- read.csv('../data/unpivot_merged_data_raw_1to1_s.csv')
subfolder_n <- c('/gam_model_1to1/') #1to1 loss_visitors 1tomore
columns_to_divide_100 <- c('Grocery.Pharmacies_visits_weekly', 'Retails_visits_weekly',
'Arts.Entertainment_visits_weekly', 'Restaurants.Bars_visits_weekly',
'Educations_visits_weekly', 'Healthcares_visits_weekly',
'others_visits_weekly','Grocery.Pharmacies_visits_weekly_lag1', 'Retails_visits_weekly_lag1',
'Arts.Entertainment_visits_weekly_lag1', 'Restaurants.Bars_visits_weekly_lag1',
'Educations_visits_weekly_lag1', 'Healthcares_visits_weekly_lag1',
'others_visits_weekly_lag1')
columns_to_divide <- c("Bachelor",'No_health_insurance')
divisor_column <- "Population"
or (col in columns_to_divide_100) {
visits_scores_wk[['No_vehciles_perhousehold']] <- visits_scores_wk[['No_vehicles']]/visits_scores_wk[['Household_num']]
visits_scores_wk <- visits_scores_wk %>%
rename(log_borough_case_count = 'borough_case_count_log',
temporal_discounting_score = 'regulated_tdscores_mode', #median
loss_aversion_score = 'regulated_loss_mode', #
agency_score = 'regulated_agency_mode',#
stringency_index = 'StringencyIndex_WeightedAverage',
no_health_insurance_rate = 'No_health_insurance_pp',
no_vehicle_household_rate = 'No_vehciles_perhousehold',
household_income = 'Household_income',
percent_people_own_bachelor_degrees  = 'Bachelor_pp',
weighted_average_age = 'weighted_estimated_average_age',
Grocery_and_Pharmacy  = 'Grocery.Pharmacies_visits_weekly_pp',
General_Retail  = 'Retails_visits_weekly_pp',
Art_and_Entertainment  = 'Arts.Entertainment_visits_weekly_pp',
Restaurant_and_Bar  = 'Restaurants.Bars_visits_weekly_pp',
Education  = 'Educations_visits_weekly_pp',
Healthcare = 'Healthcares_visits_weekly_pp',
longitude = 'longitude',
latitude = 'latitude'
)
name_display <- list('Grocery_and_Pharmacy' = 'Grocery/Pharmacy',
'General_Retail' = 'General Retail',
'Art_and_Entertainment' = 'Art/Entertainment',
'Restaurant_and_Bar' = 'Restaurant/Bar',
'Education'= 'Education',
'Healthcare' = 'Healthcare'
)
dependent_var_list <- c('Grocery_and_Pharmacy', 'General_Retail',
'Art_and_Entertainment', 'Restaurant_and_Bar',
'Education', 'Healthcare')
independent_vars_smooth_base = c("week", "log_borough_case_count")  #,'DEATH_COUNT_log' "borough_case_count"
independent_vars_linear_base = c("temporal_discounting_score","loss_aversion_score",'agency_score',
'stringency_index',"no_health_insurance_rate","no_vehicle_household_rate", "household_income",
"weighted_average_age")
visits_scores_wk <- visits_scores_wk %>%
mutate(
Grocery_and_Pharmacy = ifelse(Grocery_and_Pharmacy == 0, 0.01, Grocery_and_Pharmacy),
Education = ifelse(Education == 0, 0.01, Education),
Healthcare = ifelse(Healthcare == 0, 0.01, Healthcare)
)
run_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n, my_k=10)
source('999_2_regression_fun_v2.R')
run_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n, my_k=10)
library(tidyverse)
run_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n, my_k=10)
library(rlang)
run_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n, my_k=10)
visits_scores_wk
View(visits_scores_wk)
visits_scores_wk <- visits_scores_wk %>%
rename(log_borough_case_count = 'borough_case_count_log',
temporal_discounting_score = 'regulated_tdscores_mode', #median
loss_aversion_score = 'regulated_loss_mode', #
agency_score = 'regulated_agency_mode',#
stringency_index = 'StringencyIndex_WeightedAverage',
no_health_insurance_rate = 'No_health_insurance_pp',
no_vehicle_household_rate = 'No_vehciles_perhousehold',
household_income = 'Household_income',
percent_people_own_bachelor_degrees  = 'Bachelor_pp',
weighted_average_age = 'weighted_estimated_average_age',
Grocery_and_Pharmacy  = 'Grocery.Pharmacies_visits_weekly_pp',
General_Retail  = 'Retails_visits_weekly_pp',
Art_and_Entertainment  = 'Arts.Entertainment_visits_weekly_pp',
Restaurant_and_Bar  = 'Restaurants.Bars_visits_weekly_pp',
Education  = 'Educations_visits_weekly_pp',
Healthcare = 'Healthcares_visits_weekly_pp',
longitude = 'longitude',
latitude = 'latitude'
)
if (!requireNamespace("mgcv", quietly = TRUE)) install.packages("mgcv")
if (!requireNamespace("reshape2", quietly = TRUE)) install.packages("reshape2")
if (!requireNamespace("openxlsx", quietly = TRUE)) install.packages("openxlsx")
if (!requireNamespace("magick", quietly = TRUE)) install.packages("magick")
if (!requireNamespace("dlnm", quietly = TRUE)) install.packages("dlnm")
install.packages("pdp")
library(openxlsx)
library(mgcv)
library(stats)
library(ggplot2)
library(reshape2)
library(magick)
library(dlnm)
library(gridExtra)
library(dplyr)
library(pdp)
library(broom)
library(lmtest)
library(rlang)
source('999_2_regression_fun_v2.R')
visits_scores_wk <- read.csv('../data/unpivot_merged_data_raw_1to1_s.csv')
subfolder_n <- c('/gam_model_1to1/') #1to1 loss_visitors 1tomore
columns_to_divide_100 <- c('Grocery.Pharmacies_visits_weekly', 'Retails_visits_weekly',
'Arts.Entertainment_visits_weekly', 'Restaurants.Bars_visits_weekly',
'Educations_visits_weekly', 'Healthcares_visits_weekly',
'others_visits_weekly','Grocery.Pharmacies_visits_weekly_lag1', 'Retails_visits_weekly_lag1',
'Arts.Entertainment_visits_weekly_lag1', 'Restaurants.Bars_visits_weekly_lag1',
'Educations_visits_weekly_lag1', 'Healthcares_visits_weekly_lag1',
'others_visits_weekly_lag1')
columns_to_divide <- c("Bachelor",'No_health_insurance')
divisor_column <- "Population"
for (col in columns_to_divide_100) {
# Construct the new column name
new_col_name <- paste(col, "pp", sep = "_")
visits_scores_wk[[new_col_name]] <- (visits_scores_wk[[col]] / visits_scores_wk[[divisor_column]])*100
}
for (col in columns_to_divide) {
# Construct the new column name
new_col_name <- paste(col, "pp", sep = "_")
visits_scores_wk[[new_col_name]] <- (visits_scores_wk[[col]] / visits_scores_wk[[divisor_column]])
}
visits_scores_wk[['No_vehciles_perhousehold']] <- visits_scores_wk[['No_vehicles']]/visits_scores_wk[['Household_num']]
#####  used in the title #######
visits_scores_wk <- visits_scores_wk %>%
rename(log_borough_case_count = 'borough_case_count_log',
temporal_discounting_score = 'regulated_tdscores_mode', #median
loss_aversion_score = 'regulated_loss_mode', #
agency_score = 'regulated_agency_mode',#
stringency_index = 'StringencyIndex_WeightedAverage',
no_health_insurance_rate = 'No_health_insurance_pp',
no_vehicle_household_rate = 'No_vehciles_perhousehold',
household_income = 'Household_income',
percent_people_own_bachelor_degrees  = 'Bachelor_pp',
weighted_average_age = 'weighted_estimated_average_age',
Grocery_and_Pharmacy  = 'Grocery.Pharmacies_visits_weekly_pp',
General_Retail  = 'Retails_visits_weekly_pp',
Art_and_Entertainment  = 'Arts.Entertainment_visits_weekly_pp',
Restaurant_and_Bar  = 'Restaurants.Bars_visits_weekly_pp',
Education  = 'Educations_visits_weekly_pp',
Healthcare = 'Healthcares_visits_weekly_pp',
longitude = 'longitude',
latitude = 'latitude'
)
library(tidyverse)
visits_scores_wk <- visits_scores_wk %>%
rename(log_borough_case_count = 'borough_case_count_log',
temporal_discounting_score = 'regulated_tdscores_mode', #median
loss_aversion_score = 'regulated_loss_mode', #
agency_score = 'regulated_agency_mode',#
stringency_index = 'StringencyIndex_WeightedAverage',
no_health_insurance_rate = 'No_health_insurance_pp',
no_vehicle_household_rate = 'No_vehciles_perhousehold',
household_income = 'Household_income',
percent_people_own_bachelor_degrees  = 'Bachelor_pp',
weighted_average_age = 'weighted_estimated_average_age',
Grocery_and_Pharmacy  = 'Grocery.Pharmacies_visits_weekly_pp',
General_Retail  = 'Retails_visits_weekly_pp',
Art_and_Entertainment  = 'Arts.Entertainment_visits_weekly_pp',
Restaurant_and_Bar  = 'Restaurants.Bars_visits_weekly_pp',
Education  = 'Educations_visits_weekly_pp',
Healthcare = 'Healthcares_visits_weekly_pp',
longitude = 'longitude',
latitude = 'latitude'
)
name_display <- list('Grocery_and_Pharmacy' = 'Grocery/Pharmacy',
'General_Retail' = 'General Retail',
'Art_and_Entertainment' = 'Art/Entertainment',
'Restaurant_and_Bar' = 'Restaurant/Bar',
'Education'= 'Education',
'Healthcare' = 'Healthcare'
)
dependent_var_list <- c('Grocery_and_Pharmacy', 'General_Retail',
'Art_and_Entertainment', 'Restaurant_and_Bar',
'Education', 'Healthcare')
independent_vars_smooth_base = c("week", "log_borough_case_count")  #,'DEATH_COUNT_log' "borough_case_count"
independent_vars_linear_base = c("temporal_discounting_score","loss_aversion_score",'agency_score',
'stringency_index',"no_health_insurance_rate","no_vehicle_household_rate", "household_income",
"weighted_average_age")
visits_scores_wk <- visits_scores_wk %>%
mutate(
Grocery_and_Pharmacy = ifelse(Grocery_and_Pharmacy == 0, 0.01, Grocery_and_Pharmacy),
Education = ifelse(Education == 0, 0.01, Education),
Healthcare = ifelse(Healthcare == 0, 0.01, Healthcare)
)
run_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n, my_k=10)
library(mgcv)
run_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n, my_k=10)
library(broom)
library(lmtest)
run_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n, my_k=10)
independent_vars <- c(independent_vars_smooth_base, independent_vars_linear_base,"log_y_lag1")
dependence_terms(dependent_var_list, independent_vars, visits_scores_wk, subfolder_n)
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
png_files <- paste0("../results/", subfolder_n, dependent_var_list, "_gam_model_plot.png")
images <- list()
# Read the images, with a check to ensure each file is successfully read
for (file_name in png_files) {
if (file.exists(file_name)) {
images[[file_name]] <- image_read(file_name)
} else {
warning(paste("File not found:", file_name))
}
}
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
source('999_2_regression_fun_v2.R')
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
library(openxlsx)
library(stats)
library(ggplot2)
library(reshape2)
library(magick)
library(dlnm)
library(gridExtra)
library(dplyr)
library(tidyverse)
library(rlang)
source('999_2_regression_fun_v2.R')
visits_scores_wk <- read.csv('../data/unpivot_merged_data_raw_1to1_s.csv')
subfolder_n <- c('/gam_model_1to1_k9/')
columns_to_divide_100 <- c('Grocery.Pharmacies_visits_weekly', 'Retails_visits_weekly',
'Arts.Entertainment_visits_weekly', 'Restaurants.Bars_visits_weekly',
'Educations_visits_weekly', 'Healthcares_visits_weekly',
'others_visits_weekly','Grocery.Pharmacies_visits_weekly_lag1', 'Retails_visits_weekly_lag1',
'Arts.Entertainment_visits_weekly_lag1', 'Restaurants.Bars_visits_weekly_lag1',
'Educations_visits_weekly_lag1', 'Healthcares_visits_weekly_lag1',
'others_visits_weekly_lag1')
columns_to_divide <- c("Bachelor",'No_health_insurance')
divisor_column <- "Population"
# Loop through each column to divide
for (col in columns_to_divide_100) {
# Construct the new column name
new_col_name <- paste(col, "pp", sep = "_")
visits_scores_wk[[new_col_name]] <- (visits_scores_wk[[col]] / visits_scores_wk[[divisor_column]])*100
}
for (col in columns_to_divide) {
# Construct the new column name
new_col_name <- paste(col, "pp", sep = "_")
visits_scores_wk[[new_col_name]] <- (visits_scores_wk[[col]] / visits_scores_wk[[divisor_column]])
}
visits_scores_wk[['No_vehciles_perhousehold']] <- visits_scores_wk[['No_vehicles']]/visits_scores_wk[['Household_num']]
visits_scores_wk <- visits_scores_wk %>%
rename(log_borough_case_count = 'borough_case_count_log',
temporal_discounting_score = 'regulated_tdscores_mode', #median
loss_aversion_score = 'regulated_loss_mode', #
agency_score = 'regulated_agency_mode',#
stringency_index = 'StringencyIndex_WeightedAverage',
no_health_insurance_rate = 'No_health_insurance_pp',
no_vehicle_household_rate = 'No_vehciles_perhousehold',
household_income = 'Household_income',
percent_people_own_bachelor_degrees  = 'Bachelor_pp',
weighted_average_age = 'weighted_estimated_average_age',
Grocery_and_Pharmacy  = 'Grocery.Pharmacies_visits_weekly_pp',
General_Retail  = 'Retails_visits_weekly_pp',
Art_and_Entertainment  = 'Arts.Entertainment_visits_weekly_pp',
Restaurant_and_Bar  = 'Restaurants.Bars_visits_weekly_pp',
Education  = 'Educations_visits_weekly_pp',
Healthcare = 'Healthcares_visits_weekly_pp',
longitude = 'longitude',
latitude = 'latitude'
)
name_display <- list('Grocery_and_Pharmacy' = 'Grocery/Pharmacy',
'General_Retail' = 'General Retail',
'Art_and_Entertainment' = 'Art/Entertainment',
'Restaurant_and_Bar' = 'Restaurant/Bar',
'Education'= 'Education',
'Healthcare' = 'Healthcare'
)
dependent_var_list <- c('Grocery_and_Pharmacy', 'General_Retail',
'Art_and_Entertainment', 'Restaurant_and_Bar',
'Education', 'Healthcare')
independent_vars_smooth_base = c("week", "log_borough_case_count")  #,'DEATH_COUNT_log' "borough_case_count"
independent_vars_linear_base = c("temporal_discounting_score","loss_aversion_score",'agency_score',
'stringency_index',"no_health_insurance_rate","no_vehicle_household_rate", "household_income",
"weighted_average_age")
visits_scores_wk <- visits_scores_wk %>%
mutate(
Grocery_and_Pharmacy = ifelse(Grocery_and_Pharmacy == 0, 0.01, Grocery_and_Pharmacy),
Education = ifelse(Education == 0, 0.01, Education),
Healthcare = ifelse(Healthcare == 0, 0.01, Healthcare)
)
library(mgcv)
library(pdp)
library(broom)
library(lmtest)
### please change the k when do the model test!!
run_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n, my_k=9)
independent_vars <- c(independent_vars_smooth_base, independent_vars_linear_base,"log_y_lag1")
dependence_terms(dependent_var_list, independent_vars, visits_scores_wk, subfolder_n)
plot_gam_models(dependent_var_list, independent_vars_smooth_base, independent_vars_linear_base, visits_scores_wk, name_display, subfolder_n)
